angular.module("jdm.loadingIndicator",["ngAnimate","ngAria"]),function(){"use strict";function n(){function n(n,e,i){e[0].classList.add("jdm-loading-container")}var e={restrict:"A",scope:{},link:n};return e}angular.module("jdm.loadingIndicator").directive("loadingIndicatorContainer",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(){function n(n){var e=this,i=e.referenceId||0;n.initDirective(i),e.indicator=n.directives[i]}n.$inject=["loadingIndicator"];var e={restrict:"E",requires:"^loadingIndicatorContainer",controller:n,controllerAs:"loadingIndicator",bindToController:{referenceId:"@",isLoading:"="},scope:{},templateUrl:"templates/loading-indicator-inline.tpl.html"};return e}angular.module("jdm.loadingIndicator").directive("loadingIndicator",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(){function n(n){var e=this,i=e.referenceId||0;n.initDirective(i),e.indicator=n.directives[i]}n.$inject=["loadingIndicator"];var e={restrict:"E",controller:n,controllerAs:"loadingIndicator",bindToController:{referenceId:"@",isLoading:"="},scope:{},templateUrl:"templates/loading-indicator-global.tpl.html"};return e}angular.module("jdm.loadingIndicator").directive("globalLoadingIndicator",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(n,e,i){function t(n){return d(n),n}function r(n){return a(n),n}function o(e){return a(e),n.reject(e)}function a(n){void 0!==n&&void 0===e.get(n.config.url)&&i.setLoadingState(!1,n.config)}function d(n){"GET"===n.method?void 0===e.get(n.url)&&i.setLoadingState(!0,n):i.setLoadingState(!0,n)}return{request:t,response:r,responseError:o}}angular.module("jdm.loadingIndicator").factory("loadingIndicatorInterceptor",n),n.$inject=["$q","$templateCache","loadingIndicator"]}(),function(){"use strict";function n(){function n(n,i){function r(n){return c.directives[n]=c.directives[n]||s(n),c.directives[n]}function o(n){var e=c.directives[n.referenceId]||s(n.referenceId);if(n.isLoading)"undefined"==typeof e.requests&&(e.total=0,e.requests=[]),e.total++,e.requests.push(n),1===e.requests.length&&i.$emit("loadingIndicator:started",n);else for(var t=0;t<e.requests.length;t++)if(e.requests[t].url===n.url&&e.requests[t].referenceId===n.referenceId){e.requests[t].destroy(),e.total--;break}return n}function a(n){var e=c.directives[n.referenceId].requests,t=e.indexOf(n);t>-1&&e.splice(t,1),0===e.length&&i.$emit("loadingIndicator:stopped",n)}function d(n,i){var r=i||{};if(!angular.isUndefined(n)){var d={isLoading:n,url:r.url,position:r.position||t,referenceId:r.referenceId||e,destroy:function(){a(d)}};return o(d)}}function s(n){return c.directives[n]={requests:[],total:0},c.directives[n]}var c={directives:{},position:t,initDirective:r,addLoadingState:o,deleteLoadingState:a,setLoadingState:d};return c}var e=0,i=100,t="left";this.setDefaultReferenceId=function(n){e=n},this.setDefaultPosition=function(n){t=n},this.setThreshold=function(n){i=n},this.$get=n,n.$inject=["$timeout","$rootScope"]}angular.module("jdm.loadingIndicator").provider("loadingIndicator",n)}(),angular.module("jdm.loadingIndicator").run(["$templateCache",function(n){n.put("templates/loading-indicator-button.tpl.html",'<button class="loading-container loading-button" ng-disabled="checkDisabled()" ng-class="wrapperClasses()"> \n    <ng-transclude></ng-transclude>\n    <span class="loading-item" ng-if="jdmLoadingService.directives[referenceId].messages.length"> \n        <i class="jdm-loading-spinner"></i>\n    </span>\n</button>'),n.put("templates/loading-indicator-global.tpl.html",'<span class="jdm-loading" ng-if="loadingIndicator.isLoading || loadingIndicator.indicator.requests.length">\n    <i class="jdm-loading__spinner jdm-loading__spinner--global"></i> \n</span>'),n.put("templates/loading-indicator-inline.tpl.html",'<span class="jdm-loading jdm-loading--inline" ng-if="loadingIndicator.isLoading || loadingIndicator.indicator.requests.length">\n    <i class="jdm-loading__spinner jdm-loading__spinner--inline"></i> \n</span>'),n.put("templates/loading-indicator-progress.tpl.html",'\n<span class="loading-container"> \n     <span class="loading-item"> \n         <progress max="{{ jdmLoadingService.directives[referenceId].total }}" value="{{ jdmLoadingService.directives[referenceId].total - jdmLoadingService.directives[referenceId].messages.length }}"></progress> \n     </span>\n</span>\n')}]);
//# sourceMappingURL=jdm-loading-indicator.min.js.map
