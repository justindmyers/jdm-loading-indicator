angular.module("jdm.loadingIndicator",["ngAnimate","ngAria"]),function(){"use strict";function n(){function n(n){var i=this;i.$onInit=function(){var t=i.referenceId||0;n.initDirective(t),i.buttonClasses=i.buttonClasses||"",i.indicator=n.directives[t]},i.checkDisabled=function(){return!!i.buttonDisabled||(!(!i.indicator.requests.length||!i.disableOnPendingRequest)||void 0)},i.wrapperClasses=function(){var t={};return i.buttonClasses.split(" ").forEach(function(n){t[n]=!0}),i.isDarkTheme&&(t["jdm-loading-indicator-button--dark"]=!0),(i.indicator.requests.length||i.isLoading)&&(t["jdm-loading-indicator-button--loading"]=!0),(i.indicator.requests.length&&i.disableOnPendingRequest||i.buttonDisabled)&&(t.disabled=!0),angular.isDefined(i.indicatorPosition)?t["jdm-loading-indicator-button--loading-"+i.indicatorPosition]=!0:t["jdm-loading-indicator-button--loading-"+n.position]=!0,t}}n.$inject=["loadingIndicator"];var i={restrict:"E",controller:n,controllerAs:"loadingIndicatorButton",bindToController:{buttonClasses:"@",referenceId:"@",isLoading:"<",indicatorPosition:"@",disableOnPendingRequest:"@",buttonDisabled:"<",isDarkTheme:"@"},scope:{},transclude:!0,templateUrl:"templates/loading-indicator-button.tpl.html"};return i}angular.module("jdm.loadingIndicator").directive("loadingIndicatorButton",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(){function n(n,i,t){i[0].classList.add("jdm-loading-container")}var i={restrict:"A",scope:{},link:n};return i}angular.module("jdm.loadingIndicator").directive("loadingIndicatorContainer",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(){function n(n){var i=this;i.$onInit=function(){var t=i.referenceId||0;n.initDirective(t),i.indicator=n.directives[t]}}n.$inject=["loadingIndicator"];var i={restrict:"E",requires:"^loadingIndicatorContainer",controller:n,controllerAs:"loadingIndicator",bindToController:{referenceId:"@",isLoading:"="},scope:{},templateUrl:"templates/loading-indicator-inline.tpl.html"};return i}angular.module("jdm.loadingIndicator").directive("loadingIndicator",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(){function n(n){var i=this;i.$onInit=function(){var t=i.referenceId||0;n.initDirective(t),i.indicator=n.directives[t]}}n.$inject=["loadingIndicator"];var i={restrict:"E",controller:n,controllerAs:"loadingIndicator",bindToController:{referenceId:"@",isLoading:"="},scope:{},templateUrl:"templates/loading-indicator-global.tpl.html"};return i}angular.module("jdm.loadingIndicator").directive("globalLoadingIndicator",n),n.$inject=["loadingIndicator"]}(),function(){"use strict";function n(n,i,t,e){function o(n){return l(n),n}function r(n){return d(n),n}function a(i){return d(i),n.reject(i)}function d(n){if(void 0!==n){t.setLoadingState(!1,n.config);for(var i=c.length-1;i>=0;i--)c[i]===n.config&&c.splice(i,1)}}function l(n){"GET"===n.method||"JSONP"===n.method?void 0===i.get(n.url)&&s(n):s(n)}function s(n){c.push(n),e(function(){for(var i=0;i<c.length;i++)n===c[i]&&t.setLoadingState(!0,n)},t.threshold)}var c=[];return{request:o,response:r,responseError:a}}angular.module("jdm.loadingIndicator").factory("loadingIndicatorInterceptor",n),n.$inject=["$q","$templateCache","loadingIndicator","$timeout"]}(),function(){"use strict";function n(){function n(n,o){function r(n){return c.directives[n]=c.directives[n]||s(n),c.directives[n]}function a(n){var i=c.directives[n.referenceId]||s(n.referenceId);if(n.isLoading)"undefined"==typeof i.requests&&(i.total=0,i.requests=[]),i.total++,i.requests.push(n),1===i.requests.length&&o.$emit("loadingIndicator:started",n);else for(var t=0;t<i.requests.length;t++)if(i.requests[t].url===n.url&&i.requests[t].referenceId===n.referenceId){i.requests[t].destroy(),i.total--;break}return n}function d(n){var i=c.directives[n.referenceId].requests,t=i.indexOf(n);t>-1&&i.splice(t,1),0===i.length&&o.$emit("loadingIndicator:stopped",n)}function l(t,o){var r=o||{};if(!angular.isUndefined(t)){var l={isLoading:t,url:r.url,position:r.position||e,referenceId:r.referenceId||i,destroy:function(){d(l)},callTimeout:function(){n(function(){d(l)},99999)}};return l.callTimeout(),a(l)}}function s(n){return c.directives[n]={requests:[],total:0},c.directives[n]}var c={directives:{},position:e,threshold:t,initDirective:r,addLoadingState:a,deleteLoadingState:d,setLoadingState:l};return c}var i=0,t=250,e="left";this.setDefaultReferenceId=function(n){i=n},this.setDefaultPosition=function(n){e=n},this.setThreshold=function(n){t=n},this.$get=n,n.$inject=["$timeout","$rootScope"]}angular.module("jdm.loadingIndicator").provider("loadingIndicator",n)}(),angular.module("jdm.loadingIndicator").run(["$templateCache",function(n){n.put("templates/loading-indicator-button.tpl.html",'<button type="button" class="jdm-loading-container jdm-loading-indicator-button" ng-disabled="loadingIndicatorButton.checkDisabled()" ng-class="loadingIndicatorButton.wrapperClasses()"> \r\n    <span class="jdm-loading-indicator-button__wrapper">\r\n        <span class="jdm-loading jdm-loading--button" ng-if="loadingIndicatorButton.isLoading || loadingIndicatorButton.indicator.requests.length"> \r\n            <i class="jdm-loading__spinner jdm-loading__spinner--button"></i>\r\n        </span>\r\n        \r\n        <span class="jdm-loading-indicator-button__content" ng-transclude></span>\r\n    </span>\r\n</button>'),n.put("templates/loading-indicator-global.tpl.html",'<span class="jdm-loading jdm-loading--global" ng-if="loadingIndicator.isLoading || loadingIndicator.indicator.requests.length">\r\n    <i class="jdm-loading__spinner jdm-loading__spinner--global"></i> \r\n</span>'),n.put("templates/loading-indicator-inline.tpl.html",'<span class="jdm-loading jdm-loading--inline" ng-if="loadingIndicator.isLoading || loadingIndicator.indicator.requests.length">\r\n    <i class="jdm-loading__spinner jdm-loading__spinner--inline"></i> \r\n</span>'),n.put("templates/loading-indicator-progress.tpl.html",'<span class="loading-container"> \r\n     <span class="loading-item"> \r\n         <progress max="{{ jdmLoadingService.directives[referenceId].total }}" value="{{ jdmLoadingService.directives[referenceId].total - jdmLoadingService.directives[referenceId].messages.length }}"></progress> \r\n     </span>\r\n</span>\r\n')}]);
//# sourceMappingURL=jdm-loading-indicator.min.js.map
